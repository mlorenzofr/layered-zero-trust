---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: quay-s3-setup
  namespace: {{ .Values.quay.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    app: quay-s3-setup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: quay-s3-setup
  namespace: {{ .Values.quay.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
rules:
# Update Quay config secret in quay namespace
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "patch", "update"]
  resourceNames: ["quay-init-config-bundle-secret"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: quay-s3-setup-storage
  namespace: openshift-storage
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
rules:
# ObjectBucketClaim access in openshift-storage namespace
- apiGroups: ["objectbucket.io"]
  resources: ["objectbucketclaims"]
  verbs: ["get", "list", "watch"]
# Secrets access for S3 credentials in openshift-storage namespace
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# ConfigMaps access for S3 endpoint info in openshift-storage namespace
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: quay-s3-setup
  namespace: {{ .Values.quay.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
subjects:
- kind: ServiceAccount
  name: quay-s3-setup
  namespace: {{ .Values.quay.namespace }}
roleRef:
  kind: Role
  name: quay-s3-setup
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: quay-s3-setup-storage
  namespace: openshift-storage
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
subjects:
- kind: ServiceAccount
  name: quay-s3-setup
  namespace: {{ .Values.quay.namespace }}
roleRef:
  kind: Role
  name: quay-s3-setup-storage
  apiGroup: rbac.authorization.k8s.io
